{"version":3,"sources":["pages/Requests.js","components/ProgressBar.js","pages/Request.js","pages/GetStarted.js","pages/Home.js","index.js"],"names":["all_options","name","description","App","React","useState","request","setRequest","directory","setDirectory","options","setOptions","requests","setRequests","p2nAuto","setP2nAuto","history","useHistory","useEffect","fetch","then","response","json","data","console","log","toggleCheckbox","useCallback","key","includes","filter","value","onSubmit","event","preventDefault","FormData","append","join","method","body","push","p2n_dir","className","done","map","to","class","in_progress","global_progress","style","done_step_count","total_step_count","progress_step_count","onChange","e","target","type","required","placeholder","id","pattern","title","Object","keys","index","option","checked","htmlFor","ProgressBar","max_value","percent","useMemo","text","currentYear","Date","getFullYear","years","Array","from","length","_","i","Show","dir","useParams","setData","isViewUpdate","setIsViewUpdate","yearOpen","setYearOpen","year","setYear","code","source","EventSource","onmessage","received","JSON","parse","eventData","newData","progress","close","updateView","onSelectYear","runSpliter","isSpliterRun","state","patentCount","to_be_found","patentCountResult","requestSplit","split_result","to_be_found_amount","amount","cql","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","requete","onClick","cx","cy","r","stroke-width","rel","href","need_spliter","aria-haspopup","aria-expanded","aria-labelledby","aria-hidden","fill-rule","clip-rule","maxHeight","tabindex","role","aria-activedescendant","aria-label","GetStarted","action","Id","Home","version","ReactDOM","render","StrictMode","path","Request","Requests","exact","document","getElementById"],"mappings":"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","file":"static/js/main.1843c383.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst all_options = {\n  \"p2n_family\": {\n    name: \"p2n family\",\n    description: \"run family data acquisition\"\n  },\n  \"p2n_image\": {\n    name: \"p2n images\",\n    description: \"Fetch images\"\n  },\n  \"p2n_network\": {\n    name: \"p2n networks\",\n    description: \"Build various artefacts for data exploration based on network graphs\"\n  },\n  \"p2n_freeplane\": {\n    name: \"p2n freeplane\",\n    description: \"Build mind map for Freeplane\"\n  },\n  \"p2n_bibfile\": {\n    name: \"p2n bibfile\",\n    description: \"Export data in bibfile format\"\n  },\n  \"p2n_map\": {\n    name: \"p2n maps\",\n    description: \"Build maps of country coverage of patents, as well as applicants and inventors\"\n  },\n  \"p2n_tables\": {\n    name: \"p2n tables\",\n    description: \"Export various artefacts for tabular data exploration\"\n  },\n  \"p2n_carrot\": {\n    name: \"p2n carrot\",\n    description: \"Export data to XML suitable for using in Carro\"\n  },\n  \"p2n_iramuteq\": {\n    name: \"p2n iramuteq\",\n    description: \"Fetch more data and export it to suitable format for using in Iramuteq\"\n  },\n  \"p2n_cluster\": {\n    name: \"p2n cluster\",\n    description: \"Double clustering system based on non so trivial words\"\n  },\n}\n\nfunction App() {\n\n  const [ request, setRequest ] = React.useState(\"\");\n  const [ directory, setDirectory ] = React.useState(\"\");\n  const [ options, setOptions ] = React.useState([\n    \"p2n_content\",\n    \"p2n_gather_biblio\",\n    \"p2n_family\",\n    \"p2n_image\",\n    \"p2n_network\",\n    \"p2n_freeplane\",\n    \"p2n_bibfile\",\n    \"p2n_map\",\n    \"p2n_tables\",\n    \"p2n_carrot\",\n    \"p2n_iramuteq\",\n    \"p2n_cluster\",\n  ]);\n  const [ requests, setRequests ] = React.useState({});\n  const [ p2nAuto, setP2nAuto ] = React.useState(false);\n\n  const history = useHistory();\n\n  React.useEffect(() => {\n      fetch(\"http://localhost:5000/api/v1/requests\")\n      .then(function(response) {\n          return response.json();\n      })\n      .then(function(json) {\n        if (json.data) {\n          setRequests(json.data)\n        }\n        console.log(json.data)\n      });\n  }, []);\n\n  const toggleCheckbox = React.useCallback((key) => {\n    setOptions((options) => !options.includes(key) ? [...options, key] : [...options.filter((value) => value !== key)] )\n  }, [setOptions])\n\n  const onSubmit = React.useCallback((event) => {\n    event.preventDefault()\n\n    const data = new FormData();\n    data.append(\"p2n_req\", request);\n    data.append(\"p2n_dir\", directory);\n    data.append(\"p2n_options\", options.join(','));\n    data.append(\"p2n_auto\", p2nAuto ? \"true\" : \"false\")\n\n    console.log(data)\n\n    fetch('http://localhost:5000/api/v1/requests', { \n      method: 'POST',\n      body: data\n    })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(json) {\n      console.log(json)\n      history.push(\"/app/requests/\" + json.data.p2n_dir );\n    });\n    \n\n  }, [request, directory, options, history, p2nAuto])\n\n  return (\n    <div className=\"container mx-auto grid grid-cols-4 gap-4 items-start\">\n      <div className=\"col-start-1 bg-white p-8 rounded shadow\">\n        \n        <div className=\"mb-6 flex flex-col\">\n          <h3 className=\"text-lg mb-2 font-bold\">Requêtes précédentes</h3>\n\n          { requests.done && requests.done.map((name) => (\n            <Link to={\"/app/requests/\" + name } key={name}>{name}</Link>\n          ))}\n\n          { !requests.done && (\n            <div className=\"grid grid-cols-1 gap-2\">\n              <span className=\"skeleton-box h-5 w-3/5 inline-block\"></span>\n              <span className=\"skeleton-box h-5 w-1/2 inline-block\"></span>\n              <span className=\"skeleton-box h-5 w-2/5 inline-block\"></span>\n            </div>\n          ) }\n        </div>\n        \n        <hr class=\"mb-3\"/>\n\n        <div class=\"mb-6 flex flex-col\">\n          <h3 className=\"text-lg mb-2 font-bold\">Requêtes en cours</h3>\n          <div className=\"\">\n            <div className=\"relative pt-1\">\n              { requests.in_progress && requests.in_progress.map((name) => (\n                <Link to={\"/app/requests/\" + name} key={name}>\n                  <p class=\"mb-1\">{ name }</p>\n                  {\n                    requests.global_progress && requests.global_progress[name] && (\n                      <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-orange-200\">\n                        <div \n                          style={{\"width\": (requests.global_progress[name].done_step_count / requests.global_progress[name].total_step_count * 100) + \"%\"}} \n                          className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-500\"\n                        ></div>\n                        <div \n                          style={{\"width\": (requests.global_progress[name].progress_step_count / requests.global_progress[name].total_step_count * 100) + \"%\"}} \n                          className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-orange-300\"\n                        ></div>\n                      </div>\n                    )\n                  }\n                </Link>\n              ))}\n\n              { !requests.in_progress && (\n                  <div className=\"grid grid-cols-1 gap-2\">\n                    <span className=\"skeleton-box h-5 w-3/5 inline-block\"></span>\n                    <span className=\"skeleton-box h-5 w-1/2 inline-block\"></span>\n                    <span className=\"skeleton-box h-5 w-2/5 inline-block\"></span>\n                  </div>\n                ) }\n            </div>\n          </div>\n        </div>\n      </div>\n        \n      <div className=\"col-span-3 flex flex-col mb-12 bg-white p-8 rounded shadow \">\n        <h1 className=\"text-3xl font-semibold mb-2 text-gray-900\">Patent2Net toolkit</h1>\n        <hr />\n        <div className=\"mt-4\">\n\n          <form onSubmit={onSubmit}>\n            <div>\n              <label className=\"font-semibold\">Request in CQL format * :</label>\n              <p className=\"pt-2 pb-2 text-sm italic text-gray-800\">Enter in the textbox a valid espacenet smart search query for your patent research.</p>\n            </div>\n            <div className=\"mb-2\">\n              <input\n                value={request} \n                onChange={(e) => setRequest(e.target.value)}\n                className=\"px-3 py-4 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-base border border-blueGray-300 outline-none focus:outline-none focus:ring w-full\"\n                type=\"text\"\n                required\n                placeholder=\"TA=lentille\"\n                name=\"p2n_req\"\n                id=\"p2n_reqBtn\"\n              />\n            </div>\n\n            <div>\n              <label className=\"font-semibold\">Request Location * :</label>\n              <p className=\"pt-2 pb-2 text-sm italic text-gray-800\">Enter in the textbox where your patent research will be stocked.</p>\n            </div>\n            <div className=\"mb-2\">\n              <input \n                value={directory} \n                onChange={(e) => setDirectory(e.target.value)}\n                className=\"px-3 py-4 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-base border border-blueGray-300 outline-none focus:outline-none focus:ring w-full\" \n                type=\"text\" \n                required \n                placeholder=\"lentille\" \n                name=\"p2n_dir\" pattern=\"[A-Za-z0-9_-]{1,}\" \n                title=\"Use only lowercase [a-z], Uppercase [A-Z], Numbers[0-9], Underscore[_] and Hyphen [-]\" \n              />\n            </div>\t\t\t\t\n\n            <div className=\"mt-4\">\n            <label className=\"font-semibold\">Request Options :</label>\n              <p className=\"pt-2 pb-2 text-sm italic text-gray-800\">Click on the checkbox to specify the elements you need in your research:</p>\n              \n              {Object.keys(all_options).map((key, index) => {\n                let option = all_options[key]\n                return (\n                  <p key={key}>\n                    <input \n                      type=\"checkbox\"\n                      id={key}\n                      name={key} \n                      checked={options.includes(key)} \n                      onChange={() => toggleCheckbox(key) }\n                    />\n                    <label htmlFor={key} className=\"text-gray-800 text-sm mb-4 text-justify\"><b>{ option[\"name\"] }</b>: { option[\"description\"] } </label>\n                  </p>\n                )\n              })}\n            </div>\n            <div className=\"mt-4\">\n              <label className=\"font-semibold\">Use auto request splitter:</label>\n              <input \n                type=\"checkbox\"\n                name={\"p2n_auto\"} \n                checked={p2nAuto} \n                onChange={() => setP2nAuto(!p2nAuto) }\n              />\n            </div>\n\n\n            <div className=\"mt-4 italic text-sm text-gray-800\">\n              Fields marked with * are mandatory.\n            </div>\n            <input \n              className=\"w-64 focus:outline-none px-8 py-2 rounded-md font-semibold text-white bg-indigo-500 cursor-pointer mt-4\"\n              type=\"submit\"\n              value=\"Submit\"\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\"\n\nconst ProgressBar = ({ name, value, max_value }) => {\n\n    const percent = React.useMemo(() => (value / max_value * 100) || 0, [value, max_value])\n    const text = value === null || max_value === null ? \"En attente...\" : percent + \"%\"\n\n\n    return (\n        <div class=\"ProgressBar\">\n            <div class=\"flex justify-between\">\n                <p>{ name }</p>\n                <p>{ text }</p>\n            </div>\n            <div class=\"relative pt-1\">\n                <div class=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-orange-200\">\n                    <div style={{\"width\": percent + \"%\" }} class=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-500\"></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProgressBar","import React from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport ProgressBar from \"../components/ProgressBar\";\n\nconst currentYear = new Date().getFullYear();\nconst years = Array.from({length: 30}, (_, i) => currentYear - i)\n\nconsole.log(years)\n\nconst Show = () => {\n    let { dir } = useParams();\n\n    const [data, setData] = React.useState({});\n    const [isViewUpdate, setIsViewUpdate] = React.useState(false);\n    const [yearOpen, setYearOpen] = React.useState(false);\n    const [year, setYear] = React.useState(currentYear)\n\n    React.useEffect(() => {\n        fetch(\"http://localhost:5000/api/v1/requests/\" + dir)\n        .then(function(response) {\n            return response.json();\n        })\n        .then(function(json) {\n            if(json.code === 200) {\n                console.log(json.data)\n                setData(json.data)\n            }\n        });\n    }, [dir]);\n\n    React.useEffect(() => {\n        console.log(\"Opening the SSE connection\")\n        var source = new EventSource(\"http://localhost:5000/listen\");\n        source.onmessage = function(event) {\n            const received = JSON.parse(event.data)\n            console.log(received)\n\n            if (received.data) {\n                const eventData = received.data\n\n                setData((data) => {\n                    const newData = {...data};\n                    for(let key in eventData) {\n                        if (newData.progress) {\n                            console.log(\"====>\", key, eventData);\n                            newData.progress[key] = eventData[key];\n                        }\n                    }\n                    return newData;\n                })\n            }\n        }\n\n        return () => {\n            source.close()\n        }\n    }, [])\n\n    const updateView = React.useCallback(() => {\n        setIsViewUpdate(true)\n        fetch('http://localhost:5000/api/v1/requests/' + dir + \"/interface\", { \n            method: 'POST'\n        })\n        .then(function(response) {\n            return response.json();\n        })\n        .then(function(json) {\n            setIsViewUpdate(false)\n        });\n    }, [dir])\n\n    const onSelectYear = React.useCallback((year) => {\n        setYear(year)\n        setYearOpen(false)\n    }, [setYear])\n\n    const runSpliter = React.useCallback(() => {\n        const data = new FormData();\n        data.append(\"date\", year);\n\n        fetch('http://localhost:5000/api/v1/requests/' + dir + \"/split\", { \n            method: 'POST',\n            body: data\n        })\n        .then(function(response) {\n            return response.json();\n        })\n        .then(function(json) {\n            setIsViewUpdate(false)\n        });             \n    }, [year, dir])\n\n    const isSpliterRun = React.useMemo(() => (\n        data.state === \"SPLITER_RUN\"\n    ), [data])\n\n    const patentCount = React.useMemo(() => (\n        isSpliterRun && data.data && !data.data.to_be_found\n    ), [data, isSpliterRun])\n\n    const patentCountResult = React.useMemo(() => (\n        isSpliterRun && data.data && data.data.to_be_found\n    ), [data, isSpliterRun])\n\n    const requestSplit = React.useMemo(() => (\n        isSpliterRun && data.data && data.data.split_result\n    ), [data, isSpliterRun])\n\n\n\n    const to_be_found = React.useMemo(() => patentCountResult && data.data.to_be_found, [data, patentCountResult])\n\n    const split_result = React.useMemo(() => requestSplit && data.data.split_result, [data, requestSplit])    \n    \n    const to_be_found_amount = React.useMemo(() => (\n        to_be_found && (to_be_found.amount >= 10000 ? `Plus de 10000` : to_be_found.amount)\n    ), [to_be_found])\n\n    return (\n        <div className=\"container mx-auto\">\n            <div className=\"flex justify-center items-center\">\n                <div className=\"flex flex-col w-3/5 mb-12 bg-white p-8 rounded shadow\">\n                    {\n                        data.cql ? (\n                            <>\n                                <div className=\"pb-4 flex justify-between\">\n                                    <div className=\"flex items-center\">\n                                        <Link \n                                            to={\"/app/requests\" }\n                                            className=\"focus:outline-none p-2 rounded-md font-semibold text-white bg-gray-600\"\n                                        >\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                                            </svg>\n                                        </Link>\n                                        <div className=\"ml-4\">\n                                            <h1 className=\"text-3xl font-semibold leading-7\">{ dir }</h1>\n                                            <h2 className=\"text-lg\">{ data.cql && data.cql.requete }</h2>\n                                        </div>\n                                    </div>\n                                    <div className=\"flex items-center\">\n                                        { \n                                            data.done && (\n                                                <>\n                                                    <button \n                                                        className=\"focus:outline-none p-2 rounded-md font-semibold text-white bg-red-500 mr-2 flex justify-center items-center\"\n                                                        onClick={updateView}\n                                                    >\n                                                        {\n                                                            isViewUpdate ? (\n                                                                <svg className=\"animate-spin h-6 w-6 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                                                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                                                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                                                </svg>\n                                                            ) : (\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                                                                </svg>\n                                                            )\n                                                        }\n                                                    </button>\n                                                    <a \n                                                        target=\"_blank\"\n                                                        rel=\"noreferrer\"\n                                                        href={\"/DATA/\" + dir + \".html\"} \n                                                        className=\"focus:outline-none px-8 py-2 rounded-md font-semibold text-white bg-indigo-500\"\n                                                    >\n                                                        Voir les données\n                                                    </a>\n                                                </>\n                                            ) \n                                        }\n                                        {\n                                            !data.done && !isSpliterRun && (\n                                                <div\n                                                    className=\"focus:outline-none px-4 py-2 rounded-md font-semibold text-white bg-indigo-400 flex justify-center items-center\"\n                                                >\n                                                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                                    </svg>\n                                                    Chargements\n                                                </div>\n                                            )\n                                        }\n\n                                    </div>\n                                </div>\n                                <hr className=\"border-gray-200\" />\n                                {\n                                    !isSpliterRun ? \n                                    (\n                                        <>\n                                        {\n                                            (data.done === false && data.progress && (\n                                                <div class=\"pt-4\">\n                                                    {Object.keys(data.progress).map((key, index) => (\n                                                        <ProgressBar\n                                                            key={key}\n                                                            name={key}\n                                                            value={data.progress[key][\"value\"]}\n                                                            max_value={data.progress[key][\"max_value\"]}\n                                                    />\n                                                    ))}                 \n                                                </div>\n                                            )) || (\n                                                <div className=\"mt-4 p-4 border border-gray-200\">\n                                                    <p>La requete est terminé</p>\n                                                </div>\n                                            )\n                                        }\n                                        </>\n                                    ) : (\n                                        <>\n                                        {\n                                            patentCount && (\n                                                <div className=\"mt-4 p-4 border border-gray-200 flex flex-row justify-between rounded\">\n                                                    <p>Verification du nombre de ressource associé à la requete</p>\n                                                    <div>\n                                                        <svg className=\"animate-spin -ml-1 h-5 w-5 text-indigo-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                                            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                                            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                                        </svg>\n                                                    </div>\n                                                </div>\n                                            )\n                                        }\n                                        {\n                                            patentCountResult && (\n                                                <div className=\"mt-4 p-4 bg-indigo-600 flex flex-row justify-between rounded items-center text-white\">\n                                                    <div>\n                                                        <p className=\"font-bold text-lg\">{to_be_found_amount} éléments ont été trouvés</p>\n                                                        <p className=\"text-sm\">\n                                                            {\n                                                                to_be_found.need_spliter ?\n                                                                \"À partir de quelle année voulez vous récuperer les données ?\" : \n                                                                \"Il n'est pas necessaire de découper la requete, le traiement va bientôt commencer\"\n                                                            }\n                                                        </p>\n                                                    </div>\n                                                    {\n                                                        to_be_found.need_spliter && (\n                                                            <div className=\"flex flex-row mt-1\">\n                                                                <div className=\"w-32\">\n                                                                    <div>\n                                                                        <div className=\"relative text-black\">\n                                                                            <button type=\"button\" className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 font-semibold\" aria-haspopup=\"listbox\" aria-expanded=\"true\" aria-labelledby=\"listbox-label\" onClick={() => setYearOpen(!yearOpen)}>\n                                                                                <span className=\"flex items-center\">\n                                                                                    <span className=\"ml-3 block truncate\">{ year }</span>\n                                                                                </span>\n                                                                                <span className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                                                                    <svg className=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                                                                    <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                                                                                    </svg>\n                                                                                </span>\n                                                                            </button>\n\n                                                                            <ul style={{maxHeight: 200}} className={\"absolute z-10 mt-2 w-full bg-white shadow-lg rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\" + (!yearOpen ? \" transition ease-in duration-100 opacity-0\" : \" opacity-100\")} tabindex=\"-1\" role=\"listbox\" aria-labelledby=\"listbox-label\" aria-activedescendant=\"listbox-option-3\">\n                                                                            \n                                                                                { years.map((year) => (\n                                                                                    <li className=\"text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9\" id=\"listbox-option-0\" role=\"option\" onClick={() => onSelectYear(year)}>\n                                                                                        <div className=\"flex items-center\">\n                                                                                    \n                                                                                            <span className=\"font-normal ml-3 block truncate\">\n                                                                                                { year }\n                                                                                            </span>\n                                                                                        </div>\n                                                                                    </li>\n                                                                                ))}\n                                                                            </ul>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                                <button type=\"button\" className=\"bg-green-500 ml-2 px-2 rounded\" aria-label=\"Suivant\" onClick={() => runSpliter()}>\n                                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n                                                                    </svg>\n                                                                </button>\n                                                            </div>\n                                                        )\n                                                    }\n                                                    \n                                                </div>\n                                            )\n                                        }\n                                        {\n                                            requestSplit && (\n                                                <p>Split result</p>\n                                            )\n                                        }\n                                        </>\n                                    )\n                                }\n                                \n                            </>\n                        ) : null\n                    }\n                </div>   \n            </div>\n        </div>\n    )   \n}\n\nexport default Show;","\r\nconst GetStarted = () => {\r\n    \r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <div className=\"flex justify-center items-center\">\r\n                <div className=\"flex flex-col w-3/5 mb-12 bg-white p-8 rounded shadow\">\r\n                    <div>\r\n                        <h1 className=\"text-3xl font-semibold mb-2 text-gray-900\">Get Started</h1>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"mt-4\">\r\n\r\n                            <h2 className=\"font-semibold\" id=\"Register\" >Register the use of P2N</h2>\r\n                            <hr/>\r\n\r\n                            <div className=\"mt-4\">\r\n                                <p className=\"text-gray-800 text-sm mb-4 text-justify\">You have first to register yourself at Espacenet and get a key to data access. So you must (if you already have it skip this step)\r\n                                </p>\t\r\n                                \r\n                                <ol className=\"list-decimal text-gray-800 text-sm mb-3 text-justify\">\r\n                                    <li>Go to the Open Patent Services (OPS) by opening the link :<br/> \r\n                                    <a className=\"hover:underline\" href=\"https://www.epo.org/searching-for-patents/technical/espacenet/ops.html#tab1\"> https://www.epo.org/searching-for-patents/technical/espacenet/ops.html#tab1</a></li>\r\n                                    <li>Click on the “<b>Register</b>” button and fulfill the form</li>\r\n                                    <li>Wait until you receive the email confirmation of you register from EPO Developer Portal.</li>\r\n                                    <li>Log in the EPO Developer Portal :<br /> <a className=\"hover:underline\" href=\" https://developers.epo.org/user/login\">https://developers.epo.org/user/login</a> </li>\r\n                                    <li>Select the option “<b>My apps</b>”</li>\r\n                                    <li>Create and register the “<b>Patent2Net</b>” application</li>\r\n                                    <li> The system returns the API credentials key and secret, similar to that shown bellow (this one is invalid, of course):<br/>\r\n                                    <pre className=\"code border-dashed border-2 border-orange-600 bg-orange-100\">vmrr7AaAGIl794E6VunJ6PzjbkfajwLW,KHzH4fGM7opMhDDD</pre>\r\n                                    </li>\r\n                                    <li>Copy/paste the key in the textbox and click on confirm. It will create a file in your install of Patent2Net who will let you have full use of it. </li>\r\n                                </ol>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-4\">\r\n                            <form action=\"http://localhost:5000/get_started/stocked\" method=\"post\">\r\n                                <div>\r\n                                    <label className=\"font-semibold\">cles-epo * :</label>\r\n                                    <p className=\"pt-2 pb-2 text-sm italic text-gray-800\">Paste in the textbox the key provided by EPO.</p>\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                    <input className=\"px-3 py-4 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-base border border-blueGray-300 outline-none focus:outline-none focus:ring w-full\" type=\"text\" required placeholder=\"vmrr7AaAGIl794E6VunJ6PzjbkfajwLW,KHzH4fGM7opMhDDD\" name=\"p2n_epo\" />\r\n                                </div>\r\n\r\n                            \r\n                                <div className=\"mt-4 italic text-sm text-gray-800\">\r\n                                    Fields marked with * are mandatory.\r\n                                </div>\r\n                                <input className=\"w-64 focus:outline-none px-8 py-2 rounded-md font-semibold text-white bg-indigo-500 cursor-pointer mt-4\" type=\"submit\" value=\"confirm\" id=\"pacing\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                        <h2 className=\"font-semibold\"Id=\"Archive_Content\" >P2N Docker archive content</h2>\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <div>\r\n                            <ul className=\"list-disc text-gray-800 text-sm mb-3 mt-3 text-justify \">\r\n                                <li> <b>Dockerfile</b> : Mandatory for the install of P2N Docker</li>\r\n                                <li><b>Install_P2N.bat</b> : used to install all the P2N Content in Docker</li>\r\n                                <li><b>Run_P2N.bat</b> : Used to initiate P2N instance in Docker</li>\r\n                                <li><b>Stop_P2N.bat</b> : Used to stop P2N instance</li>\r\n                                <li><b>Copy Docker P2N</b> :\r\n                                    <ul>\r\n                                        <li>Copy_Docker_P2N.bat : Create a tar file with all the base content of your docker version</li>\r\n                                        <li>Load_Docker_P2N.bat : Import the tar file insde docker and create P2N image</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li><b>P2N_Bash.bat</b> : Create a command prompt instance who interact with P2N Docker. <a href=\"https://docs.ip-tools.org/patent2net/usage/classic.html\"target=\"_blank\" className=\"hover:underline\"><i>Click here for more details.</i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                        <h2 className=\"font-semibold\" Id=\"Interface_Directory\">P2N Interface directories</h2>\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <div>\r\n                            <ul className=\"list-disc text-gray-800 text-sm mb-3 mt-3 text-justify \">\r\n                                <li> <b> Home</b> : Default page. Explain how PatentNet can help you</li>\r\n                                <li><b>Get Started</b> : Explain how to use P2N Docker</li>\r\n                                <li><b>Requests</b> : form used to execute requests to the EPO database </li>\r\n                                <li><b>Index</b> : Display all the results of P2N </li>\r\n                                <li><b>Download Data</b> : create a zip folder with all the datas contained in Index. Downloaded on your local machine</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetStarted;","\r\nconst Home = ({version}) => (\r\n    <div className=\"container mx-auto\">\r\n        <div className=\"flex justify-center items-center\">\r\n            <div className=\"flex flex-col w-3/5 mb-12 bg-white p-8 rounded shadow\">\r\n                <h1 className=\"text-3xl font-semibold mb-2 text-gray-900\">Patent2Net Docker Version : <span class=\"font-normal\">{version}</span> </h1>\r\n                <hr />\r\n                <div className=\"mt-4\">\r\n                    <div className=\"mt-4\">\r\n                        <p className=\"text-gray-800 text-sm mb-4 text-justify\">Patent2Net is a toolkit for patent information processing and statistical analysis for education and science.<br/>\r\n                        Patent2Net helps to collect, study and analyze patent data from the European Patent Office’s Open Patent Services API (OPS). <br/>\r\n                        Patent2Net is a free software dedicated to :\r\n                        </p>\t\r\n                        \r\n                        <ul className=\"list-disc text-gray-800 text-sm mb-3 text-justify\">\r\n                            <li>provide statistical analysis and representations of a set of patents.</li>\r\n                            <li>promote the use of patent information in the academic field, nano and small firms,\r\n                            developing countries.</li>\r\n                            <li>study and practice how to collect, treat and communicate “textual bibliographic information”\r\n                            and learn the automation process.</li>\r\n                        </ul>\r\n                        \r\n                        <p className=\"text-gray-800 text-sm mb-4 text-justify\">Contributions are always welcome!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"mt-4\">\r\n                    <p className=\"text-gray-800 text-sm mb-4 text-justify\">To update your P2N version click on the button : </p>\r\n                    <a href=\"/updateP2N\"><input type=\"submit\" name=\"Update P2N\" value=\"Update P2N\" className=\"w-64 focus:outline-none px-8 py-2 rounded-md font-semibold text-white bg-red-500 cursor-pointer mt-4\" /></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Home","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport Requests from './pages/Requests';\nimport Request from './pages/Request';\nimport GetStarted from './pages/GetStarted';\nimport './index.css'\nimport Home from './pages/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <nav className=\"bg-indigo-600 p-2 mt-0 w-full z-10 top-0 shadow text-white\">\n        <div className=\"container mx-auto flex flex-wrap items-center\">\n          <div className=\"flex w-full md:w-1/2 justify-center md:justify-start font-extrabold\">\n            <a className=\"no-underline hover:no-underline\" href=\"/\" >\n              <span className=\"text-2xl pl-2\"> Patent2Net</span>\n            </a>\n          </div>\n          <div className=\"flex w-full pt-2 content-center justify-between md:w-1/2 md:justify-end\">\n            <ul className=\"list-reset flex justify-between flex-1 md:flex-none items-center\">\n              <li className=\"mr-3\">\n                <Link to=\"/app/\"  className=\"inline-block no-underline hover:underline py-2 px-4\">Home</Link>\n              </li>\n              \n              <li className=\"mr-3\">\n                <Link to=\"/app/get_started\" className=\"inline-block no-underline hover:underline py-2 px-4\">Get Started</Link>\n              </li>\n              \n              <li className=\"mr-3\">\n                <Link to=\"/app/requests\"  className=\"inline-block py-2 px-4 no-underline font-medium\">Requests</Link>\n              </li>\n              \n              <li className=\"mr-3\">\n                <Link to=\"/app/index\"  className=\"inline-block no-underline hover:underline py-2 px-4\">Index</Link>\n              </li>\n              \n              <li className=\"mr-3\">\n                <a href=\"/downloadDat\" className=\"inline-block no-underline hover:underline py-2 px-4\">Download Data</a>\n              </li>\n              <li className=\"mr-3\">\n                <a href=\"/doc/_build/html/index.html\" className=\"inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:text-orange-500 hover:bg-white mt-4 lg:mt-0\">Documentation</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n      <div className=\"my-10\">\n        <Switch>\n          <Route path=\"/app/get_started\">\n            <GetStarted />\n          </Route>\n          <Route path=\"/app/requests/:dir\">\n            <Request />\n          </Route>\n          <Route path=\"/app/requests\">\n            <Requests />\n          </Route>\n          <Route exact path=\"/app/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}